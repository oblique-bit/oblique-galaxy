(self.webpackChunkoblique_galaxy=self.webpackChunkoblique_galaxy||[]).push([[787],{"./projects/oblique-galaxy/src/lib/components/command/command.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>command_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),tooltip=__webpack_require__("./node_modules/@angular/material/fesm2022/tooltip.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var command_componentngResource=__webpack_require__("./projects/oblique-galaxy/src/lib/components/command/command.component.scss?ngResource"),command_componentngResource_default=__webpack_require__.n(command_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs");class PendingCopy{constructor(text,_document){this._document=_document;const textarea=this._textarea=this._document.createElement("textarea"),styles=textarea.style;styles.position="fixed",styles.top=styles.opacity="0",styles.left="-999em",textarea.setAttribute("aria-hidden","true"),textarea.value=text,textarea.readOnly=!0,(this._document.fullscreenElement||this._document.body).appendChild(textarea)}copy(){const textarea=this._textarea;let successful=!1;try{if(textarea){const currentFocus=this._document.activeElement;textarea.select(),textarea.setSelectionRange(0,textarea.value.length),successful=this._document.execCommand("copy"),currentFocus&&currentFocus.focus()}}catch{}return successful}destroy(){const textarea=this._textarea;textarea&&(textarea.remove(),this._textarea=void 0)}}class Clipboard{constructor(document){this._document=document}copy(text){const pendingCopy=this.beginCopy(text),successful=pendingCopy.copy();return pendingCopy.destroy(),successful}beginCopy(text){return new PendingCopy(text,this._document)}static{this.ɵfac=function Clipboard_Factory(__ngFactoryType__){return new(__ngFactoryType__||Clipboard)(core["ɵɵinject"](common.DOCUMENT))}}static{this.ɵprov=core["ɵɵdefineInjectable"]({token:Clipboard,factory:Clipboard.ɵfac,providedIn:"root"})}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](Clipboard,[{type:core.Injectable,args:[{providedIn:"root"}]}],(()=>[{type:void 0,decorators:[{type:core.Inject,args:[common.DOCUMENT]}]}]),null);const CDK_COPY_TO_CLIPBOARD_CONFIG=new core.InjectionToken("CDK_COPY_TO_CLIPBOARD_CONFIG");class CdkCopyToClipboard{constructor(_clipboard,_ngZone,config){this._clipboard=_clipboard,this._ngZone=_ngZone,this.text="",this.attempts=1,this.copied=new core.EventEmitter,this._pending=new Set,config&&null!=config.attempts&&(this.attempts=config.attempts)}copy(attempts=this.attempts){if(attempts>1){let remainingAttempts=attempts;const pending=this._clipboard.beginCopy(this.text);this._pending.add(pending);const attempt=()=>{const successful=pending.copy();successful||! --remainingAttempts||this._destroyed?(this._currentTimeout=null,this._pending.delete(pending),pending.destroy(),this.copied.emit(successful)):this._currentTimeout=this._ngZone.runOutsideAngular((()=>setTimeout(attempt,1)))};attempt()}else this.copied.emit(this._clipboard.copy(this.text))}ngOnDestroy(){this._currentTimeout&&clearTimeout(this._currentTimeout),this._pending.forEach((copy=>copy.destroy())),this._pending.clear(),this._destroyed=!0}static{this.ɵfac=function CdkCopyToClipboard_Factory(__ngFactoryType__){return new(__ngFactoryType__||CdkCopyToClipboard)(core["ɵɵdirectiveInject"](Clipboard),core["ɵɵdirectiveInject"](core.NgZone),core["ɵɵdirectiveInject"](CDK_COPY_TO_CLIPBOARD_CONFIG,8))}}static{this.ɵdir=core["ɵɵdefineDirective"]({type:CdkCopyToClipboard,selectors:[["","cdkCopyToClipboard",""]],hostBindings:function CdkCopyToClipboard_HostBindings(rf,ctx){1&rf&&core["ɵɵlistener"]("click",(function CdkCopyToClipboard_click_HostBindingHandler(){return ctx.copy()}))},inputs:{text:[0,"cdkCopyToClipboard","text"],attempts:[0,"cdkCopyToClipboardAttempts","attempts"]},outputs:{copied:"cdkCopyToClipboardCopied"},standalone:!0})}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](CdkCopyToClipboard,[{type:core.Directive,args:[{selector:"[cdkCopyToClipboard]",host:{"(click)":"copy()"},standalone:!0}]}],(()=>[{type:Clipboard},{type:core.NgZone},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[CDK_COPY_TO_CLIPBOARD_CONFIG]}]}]),{text:[{type:core.Input,args:["cdkCopyToClipboard"]}],attempts:[{type:core.Input,args:["cdkCopyToClipboardAttempts"]}],copied:[{type:core.Output,args:["cdkCopyToClipboardCopied"]}]});class ClipboardModule{static{this.ɵfac=function ClipboardModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||ClipboardModule)}}static{this.ɵmod=core["ɵɵdefineNgModule"]({type:ClipboardModule,imports:[CdkCopyToClipboard],exports:[CdkCopyToClipboard]})}static{this.ɵinj=core["ɵɵdefineInjector"]({})}}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](ClipboardModule,[{type:core.NgModule,args:[{imports:[CdkCopyToClipboard],exports:[CdkCopyToClipboard]}]}],null,null);let CommandComponent=class CommandComponent{constructor(){this.text=(0,core.signal)("")}ngAfterViewInit(){this.text.set(this.code?.nativeElement.innerText??"")}static{this.propDecorators={code:[{type:core.ViewChild,args:["code"]}]}}};CommandComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"obg-command",standalone:!0,imports:[CdkCopyToClipboard,icon.An,tooltip.oV,icon.m_],providers:[],template:'<code #code matTooltip="Copy to clipboard" [cdkCopyToClipboard]="text()">\n\t<ng-content />\n\t<mat-icon svgIcon="duplicate" class="ob-icon-text" />\n</code>\n',styles:[command_componentngResource_default()]})],CommandComponent);var oblique=__webpack_require__("./node_modules/@oblique/oblique/fesm2022/oblique.mjs");const command_component_stories={title:"Components/Command",component:CommandComponent,tags:["autodocs"],parameters:{docs:{description:{component:"\nThis component has been created by [@gillerr](https://github.com/gillerr).\n\nThe Command component is a CopyToClipboard designed to provide a simple functionality for copying text to the clipboard. It allows users to copy either projected content or text provided through an input into their clipboard with a single click. The component integrates Angular Material and CDK to enhance the user experience, particularly through the use of icons, tooltips, and animations.\n"}}},decorators:[(0,dist.moduleMetadata)({imports:[animations.BrowserAnimationsModule,icon.m_,tooltip.uc,oblique.rXG.forRoot(),CommandComponent]})]},Default={render:()=>({template:"<obg-command>a text to copy to the clipboard</obg-command>"})},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => ({\n    template: `<obg-command>a text to copy to the clipboard</obg-command>`\n  })\n}",...Default.parameters?.docs?.source}}}},"./projects/oblique-galaxy/src/lib/components/command/command.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"code {\n  cursor: pointer;\n}\n\n.mat-icon {\n  width: 0;\n  transition: width 0.25s;\n  margin-left: 4px;\n  vertical-align: center;\n}\n:host:hover .mat-icon {\n  width: 14px;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);