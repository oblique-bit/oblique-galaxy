(self.webpackChunkoblique_galaxy=self.webpackChunkoblique_galaxy||[]).push([[13],{"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./projects/oblique-galaxy/src/lib/components/convert-json-to-excel/convert-json-to-excel.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>convert_json_to_excel_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),form_field=__webpack_require__("./node_modules/@angular/material/fesm2022/form-field.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2022/input.mjs"),fesm2022_select=__webpack_require__("./node_modules/@angular/material/fesm2022/select.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var convert_json_to_excel_componentngResource=__webpack_require__("./projects/oblique-galaxy/src/lib/components/convert-json-to-excel/convert-json-to-excel.component.scss?ngResource"),convert_json_to_excel_componentngResource_default=__webpack_require__.n(convert_json_to_excel_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),oblique=__webpack_require__("./node_modules/@oblique/oblique/fesm2022/oblique.mjs"),fesm2022_core=__webpack_require__("./node_modules/@angular/material/fesm2022/core.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),xlsx=__webpack_require__("./node_modules/xlsx/xlsx.mjs"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),forkJoin=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/forkJoin.js"),from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");let ConvertJsonToExcelService=class ConvertJsonToExcelService{constructor(){this.excelType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8",this.languageCodes=[]}convertJsonToExcel(languageCodes,jsonsPath,fileName="output.xlsx"){this.languageCodes=languageCodes;const jsonFileObservables=this.languageCodes.map((code=>this.getJSON(`${jsonsPath}${code}.json`).pipe((0,catchError.W)((()=>(0,of.of)({}))))));(0,forkJoin.p)(jsonFileObservables).pipe((0,map.T)((data=>this.extractKeysAndValues(data)))).subscribe((dataToExport=>{const worksheet=xlsx.Wp.json_to_sheet(dataToExport),workbook=xlsx.Wp.book_new();xlsx.Wp.book_append_sheet(workbook,worksheet,"Data");const excelBuffer=xlsx.M9(workbook,{bookType:"xlsx",type:"array"});this.saveAsExcelFile(excelBuffer,fileName)}))}getJSON(filePath){return(0,from.H)(fetch(filePath).then((response=>response.json())))}extractKeysAndValues(data){const dataToExport=[],keys=new Set,availableLanguages=[];return data.forEach(((jsonData,index)=>{if(Object.keys(jsonData).length>0){availableLanguages.push(this.languageCodes[index]);for(const key in jsonData)Object.prototype.hasOwnProperty.call(jsonData,key)&&keys.add(key)}})),keys.forEach((key=>{const row={keys:key};data.forEach(((jsonData,index)=>{availableLanguages.includes(this.languageCodes[index])&&(row[`Value_${this.languageCodes[index]}`]=jsonData[key]||"")})),dataToExport.push(row)})),dataToExport}saveAsExcelFile(buffer,fileName){const data=new Blob([buffer],{type:this.excelType}),link=document.createElement("a");link.href=URL.createObjectURL(data),link.download=fileName,link.click()}};ConvertJsonToExcelService=(0,tslib_es6.Cg)([(0,core.Injectable)({providedIn:"root"})],ConvertJsonToExcelService);let ConvertJsonToExcelComponent=class ConvertJsonToExcelComponent{constructor(jsonToExcel){this.jsonToExcel=jsonToExcel,this.btName="Export all JSON as Excel",this.fileNameOutput="output.xlsx",this.default=!0,this.languages=[{lang:"Afrikaans",code:"af"},{lang:"Albanian",code:"sq"},{lang:"Amharic",code:"am"},{lang:"Arabic",code:"ar"},{lang:"Armenian",code:"hy"},{lang:"Azerbaijani",code:"az"},{lang:"Basque",code:"eu"},{lang:"Belarusian",code:"be"},{lang:"Bengali",code:"bn"},{lang:"Bosnian",code:"bs"},{lang:"Bulgarian",code:"bg"},{lang:"Catalan",code:"ca"},{lang:"Cebuano",code:"ceb"},{lang:"Chinese (Simplified)",code:"zh-CN"},{lang:"Chinese (Traditional)",code:"zh-TW"},{lang:"Corsican",code:"co"},{lang:"Croatian",code:"hr"},{lang:"Czech",code:"cs"},{lang:"Danish",code:"da"},{lang:"Dutch",code:"nl"},{lang:"English",code:"en"},{lang:"Esperanto",code:"eo"},{lang:"Estonian",code:"et"},{lang:"Finnish",code:"fi"},{lang:"French",code:"fr"},{lang:"Frisian",code:"fy"},{lang:"Galician",code:"gl"},{lang:"Georgian",code:"ka"},{lang:"German",code:"de"},{lang:"Greek",code:"el"},{lang:"Gujarati",code:"gu"},{lang:"Haitian Creole",code:"ht"},{lang:"Hausa",code:"ha"},{lang:"Hawaiian",code:"haw"},{lang:"Hebrew",code:"he"},{lang:"Hindi",code:"hi"},{lang:"Hmong",code:"hmn"},{lang:"Hungarian",code:"hu"},{lang:"Icelandic",code:"is"},{lang:"Igbo",code:"ig"},{lang:"Indonesian",code:"id"},{lang:"Irish",code:"ga"},{lang:"Italian",code:"it"},{lang:"Japanese",code:"ja"},{lang:"Javanese",code:"jv"},{lang:"Kannada",code:"kn"},{lang:"Kazakh",code:"kk"},{lang:"Khmer",code:"km"},{lang:"Kinyarwanda",code:"rw"},{lang:"Korean",code:"ko"},{lang:"Kurdish",code:"ku"},{lang:"Kyrgyz",code:"ky"},{lang:"Lao",code:"lo"},{lang:"Latin",code:"la"},{lang:"Latvian",code:"lv"},{lang:"Lithuanian",code:"lt"},{lang:"Luxembourgish",code:"lb"},{lang:"Macedonian",code:"mk"},{lang:"Malagasy",code:"mg"},{lang:"Malay",code:"ms"},{lang:"Malayalam",code:"ml"},{lang:"Maltese",code:"mt"},{lang:"Maori",code:"mi"},{lang:"Marathi",code:"mr"},{lang:"Mongolian",code:"mn"},{lang:"Myanmar (Burmese)",code:"my"},{lang:"Nepali",code:"ne"},{lang:"Norwegian",code:"no"},{lang:"Nyanja (Chichewa)",code:"ny"},{lang:"Odia (Oriya)",code:"or"},{lang:"Pashto",code:"ps"},{lang:"Persian",code:"fa"},{lang:"Polish",code:"pl"},{lang:"Portuguese",code:"pt"},{lang:"Punjabi",code:"pa"},{lang:"Romanian",code:"ro"},{lang:"Russian",code:"ru"},{lang:"Samoan",code:"sm"},{lang:"Scots Gaelic",code:"gd"},{lang:"Serbian",code:"sr"},{lang:"Sesotho",code:"st"},{lang:"Shona",code:"sn"},{lang:"Sindhi",code:"sd"},{lang:"Sinhala (Sinhalese)",code:"si"},{lang:"Slovak",code:"sk"},{lang:"Slovenian",code:"sl"},{lang:"Somali",code:"so"},{lang:"Spanish",code:"es"},{lang:"Sundanese",code:"su"},{lang:"Swahili",code:"sw"},{lang:"Swedish",code:"sv"},{lang:"Tagalog (Filipino)",code:"tl"},{lang:"Tajik",code:"tg"},{lang:"Tamil",code:"ta"},{lang:"Tatar",code:"tt"},{lang:"Telugu",code:"te"},{lang:"Thai",code:"th"},{lang:"Turkish",code:"tr"},{lang:"Turkmen",code:"tk"},{lang:"Ukrainian",code:"uk"},{lang:"Urdu",code:"ur"},{lang:"Uyghur",code:"ug"},{lang:"Uzbek",code:"uz"},{lang:"Vietnamese",code:"vi"},{lang:"Welsh",code:"cy"},{lang:"Xhosa",code:"xh"},{lang:"Yiddish",code:"yi"},{lang:"Yoruba",code:"yo"},{lang:"Zulu",code:"zu"}],this.selectedLanguages=new fesm2022_forms.MJ(["en","de","fr","it"]),this.jsonsPath=new fesm2022_forms.MJ("assets/i18n/")}onClickExportAsExcelFIle(){this.jsonToExcel.convertJsonToExcel(this.selectedLanguages.value??[],this.jsonsPath.value??"",this.fileNameOutput)}static#_=this.ctorParameters=()=>[{type:ConvertJsonToExcelService}];static#_2=this.propDecorators={btName:[{type:core.Input}],fileNameOutput:[{type:core.Input}],default:[{type:core.Input}]}};ConvertJsonToExcelComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"obg-convert-json-to-excel",standalone:!0,imports:[fesm2022_button.$z,oblique.gRM,icon.An,fesm2022_button.iY,form_field.RG,fesm2022_button.Hl,fesm2022_select.VO,fesm2022_core.wT,form_field.nJ,input.fg,fesm2022_forms.X1],template:'<mat-form-field>\n\t<mat-label>Default path to our Json Files</mat-label>\n\t<input matInput placeholder="assets/i18n/" type="text" [formControl]="jsonsPath" />\n</mat-form-field>\n<mat-form-field>\n\t<mat-label>languages</mat-label>\n\t<mat-select multiple [formControl]="selectedLanguages">\n\t\t@for (language of languages; track language) {\n\t\t\t<mat-option [value]="language.code">\n\t\t\t\t{{ language.lang }}\n\t\t\t</mat-option>\n\t\t}\n\t</mat-select>\n</mat-form-field>\n<button mat-button obButton="primary" type="button" (click)="onClickExportAsExcelFIle()">{{ btName }}</button>\n',styles:[convert_json_to_excel_componentngResource_default()]})],ConvertJsonToExcelComponent);const convert_json_to_excel_stories={title:"Components/NgxTranslateTools/ConvertJsonToExcel",component:ConvertJsonToExcelComponent,tags:["autodocs"],parameters:{docs:{description:{component:"\nThis component has been created by [@punix81](https://github.com/punix81).\n\nThis component is a Oblique service that fetches translation JSON files, extracts the data, and converts it into a downloadable Excel file. It handles multiple files in parallel and uses the xlsx library for Excel file generation\n\n"}}},decorators:[(0,dist.moduleMetadata)({imports:[ConvertJsonToExcelComponent,fesm2022_forms.X1,form_field.RG,input.fS,fesm2022_select.Ve,fesm2022_button.Hl,animations.BrowserAnimationsModule]})]},Default=(args=>({props:{...args,onClickExportAsExcelFIle:()=>{(new ConvertJsonToExcelService).convertJsonToExcel(["en","de"],"mockPath/","mockFileName.xlsx")}}})).bind({});Default.args={languages:[{lang:"English",code:"en"},{lang:"German",code:"de"},{lang:"French",code:"fr"}],selectedLanguages:new fesm2022_forms.MJ(["en","de"]),jsonsPath:new fesm2022_forms.MJ("assets/i18n/")};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(args: Partial<ConvertJsonToExcelComponent>) => ({\n  props: {\n    ...args,\n    onClickExportAsExcelFIle: () => {\n      const mockService = new ConvertJsonToExcelService();\n      mockService.convertJsonToExcel(['en', 'de'], 'mockPath/', 'mockFileName.xlsx');\n    }\n  }\n})",...Default.parameters?.docs?.source}}}},"./projects/oblique-galaxy/src/lib/components/convert-json-to-excel/convert-json-to-excel.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);